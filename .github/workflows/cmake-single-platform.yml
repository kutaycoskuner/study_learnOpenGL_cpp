name: CMake on Windows

on:
  push:
    branches: 
      - main  # Trigger the workflow on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the workflow for pull requests targeting the 'main' branch
env:
  # Set the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Generate Solution File
        # Call the batch script to build the project
      run: |
        .\_GenerateBuildProject.bat
      shell: cmd # Use Command Prompt for batch files

# ----------------------------------------------------------------------------------------
#       steps
# ----------------------------------------------------------------------------------------


    # pre build
      # pull all necessary 

    # build
      # compilation

    # post build
      # tessts

# ----------------------------------------------------------------------------------------
#       prev
# ----------------------------------------------------------------------------------------

    # - name: Configure CMake
    #   # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #   # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #   run: |
    #     cmake -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    #   shell: pwsh

    # - name: Build
    #   # Build your program with the given configuration
    #   run: |
    #     cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}}
    #   shell: pwsh

    # - name: Test
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   working-directory: ${{github.workspace}}\build
    #   run: |
    #     ctest -C ${{env.BUILD_TYPE}}
    #   shell: pwsh
